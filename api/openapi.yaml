openapi: 3.1.0
info:
  title: Simpler REST service
  description: Pretty useless service
  version: 1.0.0
servers:
  - url: https://example.com
paths:
  /products:
    get:
      summary: Returns a list of all products
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The number of items to return
      responses:
        '200':
          description: A JSON array of product IDs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Query information is invalid or missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Underlying service error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      summary: Deletes all the products
      responses:
        '200':
          description: Number of deleted items
          content:
            application/json:
              schema:
                type: object
                properties:
                  deletedCount:
                    type: integer
  /product:
    post:
      summary: Create a new product
      requestBody:
        description: Product to be added to the store
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                additionalInfo:
                  type: string
      responses:
        '201':
          description: ID of created product
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        '400':
          description: Request body is missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Underlying service error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /product/{id}:
    get:
      summary: Get product with specific id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The product ID
      responses:
        '200':
          description: Product with given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Query information is invalid or missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Product with a given id not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Underlying service error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      summary: Update product with specific id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The product ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                additionalInfo:
                  type: string
      responses:
        '200':
          description: Product with given id updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Query information is invalid or missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Product with a given id not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Underlying service error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      summary: Delete product with specific id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The product ID
      responses:
        '200':
          description: Product with given id deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Query information is invalid or missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Product with a given id not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Underlying service error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        additionalInfo:
          type: string
